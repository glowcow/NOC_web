stages:
  - Build
  - Test
  - Cleanup
  - Push
  - Deploy
  - Rollback

variables:
  DOCKER_TLS_CERTDIR: ""

Build image with Docker:
  variables:
    IMAGE_TAG: $CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
  stage: Build
  tags:
    - noc_msk
    - docker
  rules:
    - if: '$CUSTOM_TAG != null'
      variables:
        IMAGE_TAG: $CUSTOM_TAG
    - when: always
  script:
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$IMAGE_TAG .

Test with docker-compose:
  stage: Test
  tags:
    - noc_msk
    - docker
  image:
    name: docker/compose:1.29.2
    entrypoint: [""]
  script:
    - docker-compose
      -f docker-compose.yml -f docker-compose.test.yml
      up
      --abort-on-container-exit
      --exit-code-from test
      --quiet-pull

Cleanup test stage:
  stage: Cleanup
  tags:
    - noc_msk
    - docker
  image:
    name: docker/compose:1.29.2
    entrypoint: [""]
  script:
    - docker-compose 
      -f docker-compose.yml -f docker-compose.test.yml
      down
  when: always

Push image to registry:
  variables:
    IMAGE_TAG: $CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
  stage: Push
  tags:
    - noc_msk
    - docker
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  rules:
    - if: '$CUSTOM_TAG != null'
      variables:
        IMAGE_TAG: $CUSTOM_TAG
    - when: always
  script:
    - echo $IMAGE_TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$IMAGE_TAG

Deploy image to Docker:
  stage: Deploy
  tags:
    - noc_msk
    - docker
  script:
    - echo CI_LATEST_TAG=$(docker inspect --format '{{ index .Config.Image}}' $CI_PROJECT_NAME | cut -d':' -f2) >> deploy.env
    - docker rm -f $CI_PROJECT_NAME
    - docker create -t -p $CI_PROD_HOST:80:80
      -e DB_NAME=$CI_DB_NAME
      -e DB_USER=$CI_DB_USER
      -e DB_PASSW=$CI_DB_PASSW
      -e DB_HOST=$CI_DB_HOST
      --name $CI_PROJECT_NAME --restart unless-stopped
      -m 512m --memory-reservation=256m --cpus=0.5
      $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
    - docker start $CI_PROJECT_NAME
  artifacts:
    reports:
      dotenv: deploy.env
  only:
    - master

Rollback to previous image:
  stage: Rollback
  tags:
    - noc_msk
    - docker
  script:
    - docker rm -f $CI_PROJECT_NAME
    - docker create -t -p $CI_PROD_HOST:80:80
      -e DB_NAME=$CI_DB_NAME
      -e DB_USER=$CI_DB_USER
      -e DB_PASSW=$CI_DB_PASSW
      -e DB_HOST=$CI_DB_HOST
      --name $CI_PROJECT_NAME --restart unless-stopped
      -m 512m --memory-reservation=256m --cpus=0.5
      $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_LATEST_TAG
    - docker start $CI_PROJECT_NAME
  needs:
    - job: Deploy image to Docker
      artifacts: true
  only:
    - master
  when: manual