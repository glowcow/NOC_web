include:
  project: glowcow/ci-templates
  file: devops.yaml
  ref: main

stages:
  - CI
  - Build
  - Test
  - Cleanup
  - Push
  - Deploy
  - Rollback

variables:
  DOCKER_TLS_CERTDIR: ""
  IMAGE_TAG: $CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID

test ci 1:
  extends: .test_ci_1
  rules:
    - if: '$TEST != null && !reference [.test_ci_1, rules, if]'
      when: never
#    - !reference [.test_ci_1, rules]

test ci 2:
  extends: .test_ci_2
  rules:
    - if: '$TEST != null'
      when: never
#    - !reference [.test_ci_2, rules]


Build image with Docker:
  stage: Build
  tags:
    - noc_msk
    - docker
  rules:
    - if: $CUSTOM_TAG
      variables:
        IMAGE_TAG: $CUSTOM_TAG
    - when: always
  script:
    - echo $IMAGE_TAG
    - echo IMAGE_TAG=$IMAGE_TAG >> build.env
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$IMAGE_TAG .
  artifacts:
    reports:
      dotenv: build.env

Test with docker-compose:
  stage: Test
  tags:
    - noc_msk
    - docker
  image:
    name: docker/compose:1.29.2
    entrypoint: [""]
  script:
    - echo $IMAGE_TAG
    - docker-compose
      -f docker-compose.yml -f docker-compose.test.yml
      up
      --abort-on-container-exit
      --exit-code-from test
      --quiet-pull
  needs:
    - job: Build image with Docker
      artifacts: true

Cleanup test stage:
  stage: Cleanup
  tags:
    - noc_msk
    - docker
  image:
    name: docker/compose:1.29.2
    entrypoint: [""]
  script:
    - docker-compose 
      -f docker-compose.yml -f docker-compose.test.yml
      down
  when: always

Push image to registry:
  stage: Push
  tags:
    - noc_msk
    - docker
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - echo $IMAGE_TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$IMAGE_TAG
  needs:
    - job: Build image with Docker
      artifacts: true
  only:
    - master

Deploy image to Docker:
  stage: Deploy
  tags:
    - noc_msk
    - docker
  script:
    - echo CI_LATEST_TAG=$(docker inspect --format '{{index .Config.Image}}' $CI_PROJECT_NAME | cut -d':' -f2) >> deploy.env
    - docker rm -f $CI_PROJECT_NAME
    - docker create -t -p $CI_PROD_HOST:80:80
      -e DB_NAME=$CI_DB_NAME
      -e DB_USER=$CI_DB_USER
      -e DB_PASSW=$CI_DB_PASSW
      -e DB_HOST=$CI_DB_HOST
      --name $CI_PROJECT_NAME --restart unless-stopped
      -m 512m --memory-reservation=256m --cpus=0.5
      $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$IMAGE_TAG
    - docker start $CI_PROJECT_NAME
  artifacts:
    reports:
      dotenv: deploy.env
  needs:
    - job: Build image with Docker
      artifacts: true
  only:
    - master

Rollback to previous image:
  stage: Rollback
  tags:
    - noc_msk
    - docker
  script:
    - docker rm -f $CI_PROJECT_NAME
    - docker create -t -p $CI_PROD_HOST:80:80
      -e DB_NAME=$CI_DB_NAME
      -e DB_USER=$CI_DB_USER
      -e DB_PASSW=$CI_DB_PASSW
      -e DB_HOST=$CI_DB_HOST
      --name $CI_PROJECT_NAME --restart unless-stopped
      -m 512m --memory-reservation=256m --cpus=0.5
      $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_LATEST_TAG
    - docker start $CI_PROJECT_NAME
  needs:
    - job: Deploy image to Docker
      artifacts: true
  only:
    - master
  when: manual
